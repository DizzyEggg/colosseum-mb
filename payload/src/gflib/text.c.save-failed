#include "global.h"
#include "gflib/text.h"

IWRAM_DATA u32 *sFontHalfrowLookupTablePtr;

static inline void *GetAddr(struct Window *window)
{
    void *vaddr = window->vramCharBase + (window->currentY / 8) * window->width * 32;
    u32 x = window->currentX;
    vaddr += 32 * (x / 8);

    return vaddr;
}

void DrawGlyphOnWindow_NoShadow(struct Window * window, u32 glyphId, u32 fgColor)
{
    s32 i;
    u16 currentPixel;
    const u8 *glyphData;
    u32 xpixel;
    void *vaddr;
    u32 *curpos;

    vaddr = curpos = GetAddr(window);
    xpixel = 8 - (window->currentX & 7);
    glyphData = window->glyphGfx + glyphId * window->glyphSize;
    curpos--;
    for (i = 0; i < window->glyphSize; i++)
    {
        if (i != 8)
            curpos++;
        else
            curpos = (void *)vaddr + 32 * window->width;
        currentPixel = (*(glyphData++)) << xpixel;
        if (currentPixel != 0)
        {
            curpos[0] = (curpos[0] & ~(sFontHalfrowLookupTablePtr[currentPixel >> 8] * 0xF) | (fgColor * (sFontHalfrowLookupTablePtr[currentPixel >> 8])));
            curpos[8] = (curpos[8] & ~(sFontHalfrowLookupTablePtr[currentPixel & 0xFF] * 0xF) | (fgColor * (sFontHalfrowLookupTablePtr[currentPixel & 0xFF])));
        }
    }

    if (window->glyphWidth == 0)
        window->currentX += window->glyphWidths[glyphId] + 3;
    else
        window->currentX += window->glyphWidth;
}


void DrawGlyphOnWindow_WithShadow(struct Window *window, u32 glyphId, u32 fgColor, u32 shadowColor)
{
    s32 i;
    u16 currentPixel1, currentPixel2;
    const u8 *glyphData;
    u32 xpixel;
    void *vaddr;
    u32 *curpos;

    xpixel = 8 - (window->currentX & 7);
    glyphData = window->glyphGfx + (glyphId * window->glyphSize * 2);
    for (i = 0; i < window->glyphSize; i++)
    {
        vaddr = window->vramCharBase + ((window->currentY + i) >> 3) * window->width * 32 + (32 * (window->currentX >> 3));
        vaddr += ((window->currentY + i) & 7) * 4;
        curpos = vaddr;

        currentPixel1 = (*glyphData) << xpixel;
        currentPixel2 = (glyphData[window->glyphSize]) << xpixel;
        glyphData++;
        if ((currentPixel1 | currentPixel2) != 0)
        {
            curpos[0] = (curpos[0]
                         & ~((sFontHalfrowLookupTablePtr[currentPixel1 >> 8]
                         | sFontHalfrowLookupTablePtr[currentPixel2 >> 8]) * 0xF)
                         | (sFontHalfrowLookupTablePtr[currentPixel1 >> 8] * fgColor)
                         | (shadowColor * sFontHalfrowLookupTablePtr[currentPixel2 >> 8]));

            curpos[8] = (curpos[8]
                         & ~((sFontHalfrowLookupTablePtr[currentPixel1 & 0xFF]
                         | sFontHalfrowLookupTablePtr[currentPixel2 & 0xFF]) * 0xF)
                         | (sFontHalfrowLookupTablePtr[currentPixel1 & 0xFF] * fgColor)
                         | (shadowColor * sFontHalfrowLookupTablePtr[currentPixel2 & 0xFF]));
        }
    }

    if (window->glyphWidth == 0)
        window->currentX += window->glyphWidths[glyphId];
    else
        window->currentX += window->glyphWidth;
}
